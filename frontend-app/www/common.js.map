{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/login/login.page.ts","./src/app/register/register.page.ts","./src/app/login/login.page.scss","./src/app/register/register.page.scss","./src/app/login/login.page.html","./src/app/register/register.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAa;AACtB;AACA;AACA;AACA,mEAAmE,kDAAoB;AACvF,kEAAkE,kDAAsB;AACxF;AACA;AACA,MAAM,sDAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;AC/DoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;;;;;;;;ACjCtD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;ACzGpI;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;AC7GzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCnC;AACc;AACA;AACP;AACY;IAQxD,SAAS,SAAT,SAAS;IAOpB,YAAoB,WAA+B,EACzC,OAAsB,EAAS,eAAgC;QADrD,gBAAW,GAAX,WAAW,CAAoB;QACzC,YAAO,GAAP,OAAO,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;QACrE,IAAI,CAAC,SAAS,GAAG,IAAI,qDAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,uDAAW,EAAE;YACxB,QAAQ,EAAC,IAAI,uDAAW,EAAE;SAC5B,CAAC,CAAC;IACJ,CAAC;IAEK,gBAAgB;;YACpB,IAAI,CAAC,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE;YACtC,IAAG,IAAI,CAAC,GAAG,KAAK,IAAI,EACpB;gBACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,gBAAgB,CAAC;aAC/C;QACH,CAAC;KAAA;IAEK,cAAc;;YAClB,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACjD,CAAC;KAAA;IAGH,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAEK,aAAa;;YAEjB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACtD,SAAS,EAAE,iEAAY;aACxB,CAAC,CAAC;YACH,OAAO,MAAM,aAAa,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC;KAAA;IAED,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;CAEF;;YArDQ,6EAAkB;YAFlB,yDAAa;YAAE,2DAAe;;AAU1B,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,0EAAgC;;KAEjC,CAAC;GACW,SAAS,CA6CrB;AA7CqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ4B;AACM;AACP;AACD;AACqB;IAOxD,YAAY,SAAZ,YAAY;IAKvB,YAAoB,eAA+B,EAAS,WAA8B;QAAtE,oBAAe,GAAf,eAAe,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAmB;QACxF,IAAI,CAAC,SAAS,GAAG,IAAI,qDAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,uDAAW,EAAE;YACxB,QAAQ,EAAC,IAAI,uDAAW,EAAE;SAC5B,CAAC,CAAC;IACH,CAAC;IAEF,QAAQ;IACR,CAAC;IAGD,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;IACzD,CAAC;IAED,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IACK,UAAU;;YACd,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACnD,SAAS,EAAE,wDAAS;aACrB,CAAC,CAAC;YACH,OAAO,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC;QACpC,CAAC;KAAA;CAEF;;YAxCQ,2DAAe;YAEf,6EAAkB;;AAOd,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,6EAAmC;;KAEpC,CAAC;GACW,YAAY,CA+BxB;AA/BwB;;;;;;;;;;;;;;;;ACXzB,iEAAe,8CAA8C,mHAAmH,E;;;;;;;;;;;;;;;ACAhL,iEAAe,8CAA8C,uHAAuH,E;;;;;;;;;;;;;;;ACApL,iEAAe,+jBAA+jB,gBAAgB,mVAAmV,gBAAgB,6TAA6T,E;;;;;;;;;;;;;;;ACA9vC,iEAAe,0jBAA0jB,gBAAgB,mVAAmV,gBAAgB,qTAAqT,E","file":"common.js","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { NavController, ModalController } from '@ionic/angular';\nimport { RegisterPage } from '../register/register.page';\nimport { AuthServiceService } from '../service/auth-service.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n\n  formGroup:FormGroup\n  email:string\n  password:string\n  uid:string\n\n  constructor(private authService: AuthServiceService,\n    private navCtrl: NavController,private modalController: ModalController,) { \n      this.formGroup = new FormGroup({\n        email: new FormControl(),\n        password:new FormControl()\n     });\n    }\n\n    async ionViewWillEnter(){\n      this.uid = await this.getLoginStatus()\n      if(this.uid !== null)\n      {\n        this.navCtrl.navigateForward('folder/general')\n      }\n    }\n\n    async getLoginStatus(){\n      return await this.authService.getLoginStatus();\n    }\n\n\n  login(value) {\n    this.authService.login(value.email, value.password);\n  }\n\n  async registerModal()\n  {\n    this.dismissLogin();\n    const registerModal = await this.modalController.create({\n      component: RegisterPage\n    });\n    return await registerModal.present();\n  }\n\n  dismissLogin() {\n    this.modalController.dismiss();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { LoginPage } from '../login/login.page';\nimport { AuthServiceService } from '../service/auth-service.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  formGroup:FormGroup\n  email:string\n  password:string\n  constructor(private modalController:ModalController,private authService:AuthServiceService) {\n    this.formGroup = new FormGroup({\n      email: new FormControl(),\n      password:new FormControl()\n   });\n   }\n\n  ngOnInit() {\n  }\n\n\n  register(value) {\n    this.authService.register(value.email, value.password);\n  }\n\n  dismissRegister() {\n    this.modalController.dismiss();\n  }\n  async loginModal() {\n    this.dismissRegister();\n    const loginModal = await this.modalController.create({\n      component: LoginPage,\n    });\n    return await loginModal.present();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-navbar>\\n    <ion-title>\\n      <img alt=\\\"logo\\\" height=\\\"40\\\"  src=\\\"assets/logo-1.png\\\" > \\n    </ion-title>\\n  </ion-navbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"login(formGroup.value)\\\" method=\\\"post\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" required>Email</ion-label>\\n      <ion-input ngModel formControlName=\\\"email\\\"  type=\\\"email\\\" name=\\\"email\\\"></ion-input>\\n      <div class=\\\"alert\\\" *ngIf=\\\"!formGroup.controls['email'].valid && formGroup.controls['email'].touched\\\" >{{ contentAlert }}</div>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" required>Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\"></ion-input>\\n      <div class=\\\"alert\\\" *ngIf=\\\"!formGroup.controls['password'].valid && formGroup.controls['password'].touched\\\" >{{ contentAlert }}</div>\\n    </ion-item>\\n    <ion-button type=\\\"submit\\\" expand=\\\"full\\\" color=\\\"primary\\\" [disabled]=\\\"!formGroup.valid\\\">Login</ion-button>\\n    <p text-center>Don't have a account?</p>\\n    <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"registerModal()\\\">Register</ion-button>\\n  </form>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-navbar>\\n    <ion-title>\\n      <img alt=\\\"logo\\\" height=\\\"40\\\"  src=\\\"assets/logo-1.png\\\" > \\n    </ion-title>\\n  </ion-navbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"register(formGroup.value)\\\" method=\\\"post\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" required>Email</ion-label>\\n      <ion-input ngModel formControlName=\\\"email\\\"  type=\\\"email\\\" name=\\\"email\\\"></ion-input>\\n      <div class=\\\"alert\\\" *ngIf=\\\"!formGroup.controls['email'].valid && formGroup.controls['email'].touched\\\" >{{ contentAlert }}</div>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" required>Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\"></ion-input>\\n      <div class=\\\"alert\\\" *ngIf=\\\"!formGroup.controls['password'].valid && formGroup.controls['password'].touched\\\" >{{ contentAlert }}</div>\\n    </ion-item>\\n    <ion-button type=\\\"submit\\\" expand=\\\"full\\\" color=\\\"primary\\\" [disabled]=\\\"!formGroup.valid\\\">Register</ion-button>\\n    <p text-center>Have an account?</p>\\n    <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"loginModal()\\\">Login</ion-button>\\n  </form>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}